These notes intend to help people working on the Git version of GNU Dico.
See end of file for copying conditions.

* Requirements

If you have taken the sources from Git you will need the following
packages to build Dico.  I don't make any extra effort to accommodate
older versions of these packages, so please make sure that you have the
latest stable version.

- Automake <http://www.gnu.org/software/automake/>
- Autoconf <http://www.gnu.org/software/autoconf/>
- Bison <http://www.gnu.org/software/bison/>
- Flex <http://flex.sourceforge.net/>
- Gnulib <http://www.gnu.org/software/gnulib/>
- M4 <http://www.gnu.org/software/m4/>
- libtool <http://www.gnu.org/software/libtool/>
- Texinfo <http://www.gnu.org/software/texinfo/>

* Submodules

Dico uses the following projects as Git submodules:

- Grecs <http://puszcza.gnu.org.ua/projects/grecs>
- Gint <http://www.gnu.org.ua/software/gint>
- Imprimatur <http://www.gnu.org.ua/software/imprimatur>
- Wit <http://puszcza.gnu.org.ua/projects/wit>

This will be pulled automatically by the bootstrapping process.

* Bootstrapping

Obviously, if you are reading these notes, you did manage to check out
the project from Git. The next step is to get other files needed to build,
which are extracted from other source packages: 

1. Change to the source tree directory

   cd dico

2. Run

   ./bootstrap 

Use one or more --verbose options to see details about its progress.

Once done, proceed as described in the file README (section
INSTALLATION).

For more information about `bootstrap', run `bootstrap --help'.

* Debugging

To debug dicod, use the following command:

	libtool --mode execute gdb dicod

For debugging from Emacs run:

	M-x gdb RET gud-wrapper dicod RET

(the script gud-wrapper is located in the ./utils subdirectory)

* Adding new modules

If you want to add a new module to Dico (e.g. named `foo'), run the
following command from the Dico source tree topmost directory:

  ./bootstrap --add foo

This will create the directory modules/foo, populate it with the
necessary files, and add the appropriate statements to configure.ac
and modules/Makefile.am files.

After running this command, change to the modules/foo directory and
start hacking on your new module.


* Copyright information

Copyright (C) 2008-2020 Sergey Poznyakoff

   Permission is granted to anyone to make or distribute verbatim copies
   of this document as received, in any medium, provided that the
   copyright notice and this permission notice are preserved,
   thus giving the recipient permission to redistribute in turn.

   Permission is granted to distribute modified versions
   of this document, or of portions of it,
   under the above conditions, provided also that they
   carry prominent notices stating who last changed them.


Local Variables:
mode: outline
paragraph-separate: "[ 	]*$"
version-control: never
End:


   

